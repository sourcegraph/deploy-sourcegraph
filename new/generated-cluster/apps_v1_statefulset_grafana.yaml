apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Metrics/monitoring dashboards and alerts.
    kubectl.kubernetes.io/default-container: grafana
  labels:
    app.kubernetes.io/component: grafana
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: grafana
  namespace: sourcegraph
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana
  template:
    metadata:
      labels:
        app: grafana
        deploy: sourcegraph
    spec:
      containers:
      - image: index.docker.io/sourcegraph/grafana:187572_2022-12-06_cbecc5321c7d@sha256:cf295a1dada50607a364390a54744dbc9142aa99b42c07f1bb623ca251639d2c
        name: grafana
        ports:
        - containerPort: 3370
          name: http
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 472
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-data
        - mountPath: /sg_config_grafana/provisioning/datasources
          name: config
      securityContext:
        fsGroup: 472
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 0
      serviceAccountName: grafana
      volumes:
      - configMap:
          defaultMode: 511
          name: grafana
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: grafana-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: sourcegraph
