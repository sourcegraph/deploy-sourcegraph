apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Metrics/monitoring dashboards and alerts.
    kubectl.kubernetes.io/default-container: grafana
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: grafana
  name: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        deploy: sourcegraph
    spec:
      containers:
      - name: grafana
        image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/grafana:5.3.9071@sha256:99b532544b5e66e37aa94eedbead214d048015bf9153937c8e25d5df8d8a9b0a
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 3370
          name: http
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-data
        - mountPath: /sg_config_grafana/provisioning/datasources
          name: config
        # Grafana is relied upon to send alerts to site admins when something is wrong with
        # Sourcegraph, thus its memory requests and limits are the same to guarantee it has enough
        # memory to perform its job reliably and prevent conflicts with other pods on the same
        # host node.
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
      serviceAccountName: grafana
      securityContext:
        runAsUser: 0
      volumes:
      - name: config
        configMap:
          defaultMode: 0777
          name: grafana
  volumeClaimTemplates:
  - metadata:
      name: grafana-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
      storageClassName: sourcegraph
