apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Redis for storing short-lived caches.
    kubectl.kubernetes.io/default-container: redis-cache
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: redis
  name: redis-cache
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-cache
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: redis-cache
    spec:
      containers:
      - name: redis-cache
        image: index.docker.io/sourcegraph/redis-cache:insiders@sha256:7b5f4501ec28696b9c842def4217f03e21e687c824c277623425f9acddf1def8
        terminationMessagePolicy: FallbackToLogsOnError
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          initialDelaySeconds: 5
          exec:
            command:
              - /bin/sh
              - -c
              - |
                #!/bin/bash
                if [ -f /etc/redis/redis.conf ]; then
                  export REDISCLI_AUTH=$(grep -h "requirepass" /etc/redis/redis.conf | cut -d ' ' -f 2)
                fi
                response=$(
                  redis-cli ping
                )
                if [ "$response" != "PONG" ]; then
                  echo "$response"
                  exit 1
                fi
        resources:
          limits:
            cpu: "1"
            memory: 7Gi
          requests:
            cpu: "1"
            memory: 7Gi
        volumeMounts:
        - mountPath: /redis-data
          name: redis-data
      - name: redis-exporter
        image: index.docker.io/sourcegraph/redis_exporter:insiders@sha256:e5c30856d511423b655c7e3c524f6118336845a0f9a339fc92738f5282a67c35
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 9121
          name: redisexp
        resources:
          limits:
            cpu: 10m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 100Mi
      securityContext:
        runAsUser: 0
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-cache
