apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Redis for storing semi-persistent data like user sessions.
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: redis
  name: redis-store
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-store
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: redis-store
    spec:
      containers:
      - name: redis-store
        image: index.docker.io/sourcegraph/redis-store:5.10.2832@sha256:413d44f4cc7ec3625f0dcaac2b2a8faa3c2455e78df7ba0e7485e2f0b09a2a41
        terminationMessagePolicy: FallbackToLogsOnError
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - |
              #!/bin/bash
              PASS_CHECK=$(grep -h "requirepass" /etc/redis/redis.conf | cut -d ' ' -f 2)
              if [ ! -z "$PASS_CHECK" ]; then
                export REDISCLI_AUTH="$PASS_CHECK"
              fi
              response=$(
                redis-cli ping
              )
              if [ "$response" != "PONG" ]; then
                echo "$response"
                exit 1
              fi
        resources:
          limits:
            cpu: "1"
            memory: 7Gi
          requests:
            cpu: "1"
            memory: 7Gi
        volumeMounts:
        - mountPath: /redis-data
          name: redis-data
      - name: redis-exporter
        image: index.docker.io/sourcegraph/redis_exporter:5.10.2832@sha256:c356c8a4c32f1433d280f3ce43e3fc504dd6b0f07e208d18443adcc44cf5e5ed
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 9121
          name: redisexp
        resources:
          limits:
            cpu: 10m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 100Mi
      securityContext:
        runAsUser: 0
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-store
