apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: MinIO for storing LSIF uploads.
    kubectl.kubernetes.io/default-container: minio
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: minio
  name: minio
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: minio
    spec:
      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          value: AKIAIOSFODNN7EXAMPLE
        - name: MINIO_SECRET_KEY
          value: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        image: index.docker.io/sourcegraph/minio:3.36.3@sha256:66925bab722ed11584e1135687b5c1e00a13c550e38d954a56048c90f17edc53
        args: ['minio', 'server', '/data']
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 9000
          name: minio
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: minio
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /minio/health/live
            port: minio
            scheme: HTTP
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 500M
          requests:
            cpu: "1"
            memory: 500M
        volumeMounts:
        - mountPath: /data
          name: minio-data
      securityContext:
        runAsUser: 0
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio
