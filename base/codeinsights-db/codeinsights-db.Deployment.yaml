apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Code Insights Postgres DB instance.
  labels:
    app.kubernetes.io/component: codeinsights-db
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: codeinsights-db
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: codeinsights-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: codeinsights-db
        group: backend
    spec:
      initContainers:
      - name: correct-data-dir-permissions
        image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/alpine-3.14:5.9.45@sha256:f9de81217bf3456086e5fcb03180bb0c0b7dba1a883b339474cfca27ea89586d
        command: ["sh", "-c", "if [ -d /var/lib/postgresql/data/pgdata ]; then chmod 750 /var/lib/postgresql/data/pgdata; fi"]
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: disk
        securityContext:
          runAsUser: 0
        resources:
          limits:
            cpu: "10m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "50Mi"
      containers:
      - name: codeinsights
        image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/codeinsights-db:5.9.45@sha256:5bd79721aa31a9f56de232ffb3385be45e2cf59e6dfc9f26fa3fa431b0ce0431
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_PASSWORD # Accessible by Sourcegraph applications on the network only, so password auth is not used.
          value: password
        - name: POSTGRES_USER
          value: postgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRESQL_CONF_DIR
          value: "/conf"
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 5432
          name: codeinsights-db
        resources:
          limits:
            cpu: "4"
            memory: 2Gi
          requests:
            cpu: "4"
            memory: 2Gi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: disk
        - mountPath: /conf
          name: codeinsights-conf
      - env:
        - name: DATA_SOURCE_NAME
          value: postgres://postgres:@localhost:5432/?sslmode=disable
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: /config/code_insights_queries.yaml
        image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/postgres_exporter:5.9.45@sha256:f95f6c0ff658b69d9458baafbf3d497f30ee20525823ac8ed5b5337a89383fa4
        terminationMessagePolicy: FallbackToLogsOnError
        name: pgsql-exporter
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
      terminationGracePeriodSeconds: 120
      securityContext:
        runAsUser: 0
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: codeinsights-db
      - name: codeinsights-conf
        configMap:
          defaultMode: 0777
          name: codeinsights-db-conf
