apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    description: DaemonSet to ensure all nodes run a node-exporter pod.
    seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
  labels:
    deploy: sourcegraph
    app: node-exporter
    app.kubernetes.io/component: node-exporter
  name: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      annotations:
        description: Collects and exports machine metrics.
        kubectl.kubernetes.io/default-container: node-exporter
      labels:
        deploy: sourcegraph
        app: node-exporter
    spec:
      containers:
      - name: node-exporter
        image: index.docker.io/sourcegraph/node-exporter:4.4.1@sha256:fa8e5700b7762fffe0674e944762f44bb787a7e44d97569fe55348260453bf80
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 100Mi
        args:
        - --web.listen-address=:9100
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --path.procfs=/host/proc
        - --no-collector.wifi
        - --no-collector.hwmon
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
        - --collector.netclass.ignored-devices=^(veth.*)$
        - --collector.netdev.device-exclude=^(veth.*)$
        env:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsUser: 65534
        volumeMounts:
        - name: rootfs
          mountPath: /host/root
          mountPropagation: HostToContainer
          readOnly: true
        - name: sys
          mountPath: /host/sys
          mountPropagation: HostToContainer
          readOnly: true
        - name: proc
          mountPath: /host/proc
          mountPropagation: HostToContainer
          readOnly: true
        ports:
        - name: metrics
          containerPort: 9100
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            scheme: HTTP
            port: metrics
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            scheme: HTTP
            port: metrics
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePolicy: FallbackToLogsOnError
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      nodeSelector:
      affinity:
      tolerations:
      hostPID: true
      volumes:
      - name: rootfs
        hostPath:
          path: /
      - name: sys
        hostPath:
          path: /sys
      - name: proc
        hostPath:
          path: /proc
