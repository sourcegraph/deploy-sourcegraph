apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    description: DaemonSet to ensure all nodes run a cAdvisor pod.
    seccomp.security.alpha.kubernetes.io/pod: docker/default
  labels:
    app.kubernetes.io/component: cadvisor
    deploy: sourcegraph
    sourcegraph-resource-requires: cluster-admin
  name: cadvisor
spec:
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      annotations:
        description: Collects and exports container metrics.
        prometheus.io/port: "48080"
        sourcegraph.prometheus/scrape: "true"
      labels:
        app: cadvisor
        deploy: sourcegraph
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - --store_container_labels=false
            - --whitelisted_container_labels=io.kubernetes.container.name,io.kubernetes.pod.name,io.kubernetes.pod.namespace,io.kubernetes.pod.uid
          image: index.docker.io/sourcegraph/cadvisor:insiders@sha256:d4d8b87931155b949118695f2b7b214b97a398d9548d5ea436a637c96c36fced
          name: cadvisor
          ports:
            - containerPort: 48080
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 2000Mi
            requests:
              cpu: 150m
              memory: 200Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /rootfs
              name: rootfs
              readOnly: true
            - mountPath: /var/run
              name: var-run
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
            - mountPath: /var/lib/docker
              name: docker
              readOnly: true
            - mountPath: /dev/disk
              name: disk
              readOnly: true
            - mountPath: /dev/kmsg
              name: kmsg
              readOnly: true
      serviceAccountName: cadvisor
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /
          name: rootfs
        - hostPath:
            path: /var/run
          name: var-run
        - hostPath:
            path: /sys
          name: sys
        - hostPath:
            path: /var/lib/docker
          name: docker
        - hostPath:
            path: /dev/disk
          name: disk
        - hostPath:
            path: /dev/kmsg
          name: kmsg
