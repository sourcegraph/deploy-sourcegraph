apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Postgres database for various data.
    kubectl.kubernetes.io/default-container: pgsql
  labels:
    app.kubernetes.io/component: pgsql
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: pgsql
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgsql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pgsql
        deploy: sourcegraph
        group: backend
    spec:
      containers:
        - env: null
          image: index.docker.io/sourcegraph/postgres-12-alpine:135107_2022-03-03_9498a8bd3366@sha256:e26b159dc7c0c47d136886390c899816e669a3c2c1ead689bdad0b610364e45e
          livenessProbe:
            exec:
              command:
                - /liveness.sh
            initialDelaySeconds: 15
          name: pgsql
          ports:
            - containerPort: 5432
              name: pgsql
          readinessProbe:
            exec:
              command:
                - /ready.sh
          resources:
            limits:
              cpu: "4"
              memory: 4Gi
            requests:
              cpu: "4"
              memory: 4Gi
          startupProbe:
            exec:
              command:
                - /liveness.sh
            failureThreshold: 360
            periodSeconds: 10
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /data
              name: disk
            - mountPath: /conf
              name: pgsql-conf
            - mountPath: /dev/shm
              name: dshm
        - env:
            - name: DATA_SOURCE_NAME
              value: postgres://sg:@localhost:5432/?sslmode=disable
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /config/queries.yaml
          image: index.docker.io/sourcegraph/postgres_exporter:insiders@sha256:058803235a9deca67412edb01ec6fe22f58a7326c2f565281f7e745701df3080
          name: pgsql-exporter
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePolicy: FallbackToLogsOnError
      initContainers:
        - command:
            - sh
            - -c
            - if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi
          image: index.docker.io/sourcegraph/alpine-3.14:insiders@sha256:c12d8679188e14a5e7d581aa5550ab411f2013fb0662a3f697d378460fe7b5f4
          name: correct-data-dir-permissions
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /data
              name: disk
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 120
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: pgsql
        - configMap:
            defaultMode: 777
            name: pgsql-conf
          name: pgsql-conf
        - emptyDir:
            medium: Memory
            sizeLimit: 1G
          name: dshm
