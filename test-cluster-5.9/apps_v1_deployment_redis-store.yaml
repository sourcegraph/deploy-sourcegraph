apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Redis for storing semi-persistent data like user sessions.
  labels:
    app.kubernetes.io/component: redis
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: redis-store
  namespace: ns-sourcegraph
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-store
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis-store
        deploy: sourcegraph
    spec:
      containers:
      - image: index.docker.io/sourcegraph/redis-store:5.9.0@sha256:f89d0f6a6c25245d6e9e86199e15c573c482c092506689516ef0237e6a29591e
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: redis
        name: redis-store
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              #!/bin/bash
              PASS_CHECK=$(grep -h "requirepass" /etc/redis/redis.conf | cut -d ' ' -f 2)
              if [ ! -z "$PASS_CHECK" ]; then
                export REDISCLI_AUTH="$PASS_CHECK"
              fi
              response=$(
                redis-cli ping
              )
              if [ "$response" != "PONG" ]; then
                echo "$response"
                exit 1
              fi
          initialDelaySeconds: 10
          timeoutSeconds: 5
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /redis-data
          name: redis-data
      - image: index.docker.io/sourcegraph/redis_exporter:5.9.0@sha256:dda28a1f6785ff7d5395a5252783b5d69568383dcf185dea73128f807eb77875
        name: redis-exporter
        ports:
        - containerPort: 9121
          name: redisexp
        terminationMessagePolicy: FallbackToLogsOnError
      securityContext:
        runAsUser: 0
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-store
