apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Serves the frontend of Sourcegraph via HTTP(S).
    kubectl.kubernetes.io/default-container: frontend
  labels:
    app.kubernetes.io/component: frontend
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: sourcegraph-frontend
  namespace: foobar
spec:
  minReadySeconds: 10
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sourcegraph-frontend
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sourcegraph-frontend
        deploy: sourcegraph
    spec:
      containers:
      - args:
        - serve
        env:
        - name: PGDATABASE
          value: sg
        - name: PGHOST
          value: pgsql
        - name: PGPORT
          value: "5432"
        - name: PGSSLMODE
          value: disable
        - name: PGUSER
          value: sg
        - name: CODEINSIGHTS_PGDATASOURCE
          value: postgres://postgres:password@codeinsights-db:5432/postgres
        - name: CODEINTEL_PGDATABASE
          value: sg
        - name: CODEINTEL_PGHOST
          value: codeintel-db
        - name: CODEINTEL_PGPORT
          value: "5432"
        - name: CODEINTEL_PGSSLMODE
          value: disable
        - name: CODEINTEL_PGUSER
          value: sg
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CACHE_DIR
          value: /mnt/cache/$(POD_NAME)
        - name: GRAFANA_SERVER_URL
          value: http://grafana:30070
        - name: JAEGER_SERVER_URL
          value: http://jaeger-query:16686
        - name: PROMETHEUS_URL
          value: http://prometheus:30090
        image: index.docker.io/sourcegraph/frontend:insiders@sha256:3fb1105d32e317645c080720d17e73a9da5fdcbee567bda31a51883c2dd7ac39
        livenessProbe:
          httpGet:
            path: /healthz
            port: debug
            scheme: HTTP
          initialDelaySeconds: 300
          timeoutSeconds: 5
        name: frontend
        ports:
        - containerPort: 3080
          name: http
        - containerPort: 3090
          name: http-internal
        - containerPort: 6060
          name: debug
        readinessProbe:
          httpGet:
            path: /ready
            port: debug
            scheme: HTTP
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "2"
            ephemeral-storage: 8Gi
            memory: 4G
          requests:
            cpu: "2"
            ephemeral-storage: 4Gi
            memory: 2G
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 100
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /mnt/cache
          name: cache-ssd
      - args:
        - --reporter.grpc.host-port=jaeger-collector:14250
        - --reporter.type=grpc
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: index.docker.io/sourcegraph/jaeger-agent:insiders@sha256:c56b7e45efab76e285c791c932c91aeed64551e160b2417a5b3df6acef664b34
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        resources:
          limits:
            cpu: "1"
            memory: 500M
          requests:
            cpu: 100m
            memory: 100M
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 100
      initContainers:
      - args:
        - up
        env:
        - name: PGDATABASE
          value: sg
        - name: PGHOST
          value: pgsql
        - name: PGPORT
          value: "5432"
        - name: PGSSLMODE
          value: disable
        - name: PGUSER
          value: sg
        - name: CODEINSIGHTS_PGDATASOURCE
          value: postgres://postgres:password@codeinsights-db:5432/postgres
        - name: CODEINTEL_PGDATABASE
          value: sg
        - name: CODEINTEL_PGHOST
          value: codeintel-db
        - name: CODEINTEL_PGPORT
          value: "5432"
        - name: CODEINTEL_PGSSLMODE
          value: disable
        - name: CODEINTEL_PGUSER
          value: sg
        image: index.docker.io/sourcegraph/migrator:insiders@sha256:27f0661fb17329a8355f44a14b4276d19d0b635dbe4a76e8d02afbdc0dd92021
        name: migrator
        resources:
          limits:
            cpu: 500m
            memory: 100M
          requests:
            cpu: 100m
            memory: 50M
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 100
      securityContext:
        runAsUser: 0
      serviceAccountName: sourcegraph-frontend
      volumes:
      - emptyDir: {}
        name: cache-ssd
